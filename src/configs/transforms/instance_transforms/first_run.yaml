train:
  get_spectrogram: # special key for getting spectrogram
    _target_: torchaudio.transforms.MelSpectrogram
    sample_rate: 16000
  spec_augs: # name of the tensor on which we apply transform
    _target_: nn.Sequential # to apply several transforms sequentially
    _args_:
    - _target_: src.transforms.spec_augs.FrequencyMasking
      freq_mask_param: 15
      p=0.2
    - _target_: src.transforms.spec_augs.TimeMasking
      time_mask_param: 35
      p=0.2
  wav_augs: # name of the tensor on which we apply transform
    _target_: nn.Sequential # to apply several transforms sequentially
    _args_:
    - _target_: src.transforms.wav_augs.Gain
      min_gain_in_db=-10.0
      max_gain_in_db=10.0
      p=0.2
    - _target_: src.transforms.wav_augs.AddColoredNoise
      min_snr=5.0
      max_snr=20.0
      p=0.2
    - _target_: src.transforms.PolarityInversion
      p=0.2
    - _target_: src.transforms.PeakNormalization
      min_level_db=-30.0
      max_level_db=-20.0
      p=1.0
    - _target_: src.transforms.wav_augs.PitchShift
      min_semitones=-4
      max_semitones=4
      p=0.2
inference:
  get_spectrogram:
    _target_: torchaudio.transforms.MelSpectrogram
    sample_rate: 16000
